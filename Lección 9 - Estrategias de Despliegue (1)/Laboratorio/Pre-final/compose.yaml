version: '3.3'

services:
  book_db:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_DATABASE: 'book_service'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'user'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      # <Port exposed> : <MySQL Port running inside container>
      - '3306:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
    # Where our data will be persisted
    volumes:
      - book-db:/var/lib/mysql

  stock_db:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_DATABASE: 'stock_service'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'user'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      # <Port exposed> : <MySQL Port running inside container>
      - '3307:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
    # Where our data will be persisted
    volumes:
      - stock-db:/var/lib/mysql

  book-service:
    image: book-service:latest
    restart: always
    environment:
      MYSQL_HOST: 'book_db'
      MYSQL_PORT: '3306'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      APP_PORT: '8080'
      STOCK_SERVICE_URL: 'http://stock-service:8080'
    ports:
      # <Port exposed> : <Application Port running inside container>
      - '8091:8080'
    expose:
      # Opens port 8080 on the container
      - '8080'
    depends_on:
      - book_db
      - stock-service

  stock-service:
    image: stock-service:latest
    restart: always
    environment:
      MYSQL_HOST: 'stock_db'
      MYSQL_PORT: '3306'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      APP_PORT: '8080'
    ports:
      # <Port exposed> : <Application Port running inside container>
      - '8092:8080'
    expose:
      # Opens port 8080 on the container
      - '8080'
    depends_on:
      - stock_db
  

# Names our volume
volumes:
  book-db:
  stock-db: